% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permutation.R
\name{getPermStat}
\alias{getPermStat}
\title{Get p-value or z-score based on permutation results}
\usage{
getPermStat(rsScores, nullDistList, calcCols, testType = "greater",
  whichMetric = "pval")
}
\arguments{
\item{rsScores}{data.frame. A data.frame with region set
scores. The output of the 'runCOCOA' function.
Each row is a region set. One column for each sample
variable of interest (e.g. PC or sample phenotype).
Also can have columns with info on the overlap between the 
region set and the epigenetic data. 
Rows should be in the same order as the region sets in GRList
(the list of region sets used to create rsScores.)}

\item{nullDistList}{List. one item per region set. Each item is a 
data.frame with the 
null distribution for a single region set. Each column in the data.frame
is for a single target variable (e.g. PC or phenotype)}

\item{calcCols}{Character. The names of the columns with the COCOA scores
in `rsScores` and `nullDistList` items.}

\item{testType}{character. "greater", "lesser", "two-sided" Whether to
create p values based on one sided test or not.}

\item{whichMetric}{character. Can be "pval" or "zscore"}
}
\description{
This function starts with real COCOA scores for each
region set and null distributions for each
region set that come
from running COCOA on permuted data. Then this function uses the
null distributions to get an empirical p-value or z-score for
each region set. See vignettes for the workflow that leads to
this function.
}
\examples{
fakeOriginalScores <- data.frame(PC1=abs(rnorm(6)), PC2=abs(rnorm(6)))
fakePermScores <- data.frame(PC1=abs(rnorm(6)), PC2=abs(rnorm(6)))
fakePermScores2 <- data.frame(PC1=abs(rnorm(6)), PC2=abs(rnorm(6)))
fakePermScores3 <- data.frame(PC1=abs(rnorm(6)), PC2=abs(rnorm(6)))
permRSScores <- list(fakePermScores, fakePermScores2, fakePermScores3)
nullDistList <- convertToFromNullDist(permRSScores)
getPermStat(rsScores=fakeOriginalScores, nullDistList=nullDistList, 
            calcCols=c("PC1", "PC2"), whichMetric="pval") 
getPermStat(rsScores=fakeOriginalScores, nullDistList=nullDistList, 
            calcCols=c("PC1", "PC2"), whichMetric="zscore") 

}
