% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permutation.R
\name{getGammaPVal}
\alias{getGammaPVal}
\title{Get a p-value for region set scores based on a gamma distribution.}
\usage{
getGammaPVal(rsScores, nullDistList, calcCols, method = "mme",
  realScoreInDist = TRUE, force = FALSE)
}
\arguments{
\item{rsScores}{data.frame. A data.frame with region set
scores. The output of the 'runCOCOA' function.
Each row is a region set. One column for each sample
variable of interest (e.g. PC or sample phenotype).
Also can have columns with info on the overlap between the 
region set and the epigenetic data. 
Rows should be in the same order as the region sets in GRList
(the list of region sets used to create rsScores.)}

\item{nullDistList}{list of data.frames. Each list item 
has null distributions for a single 
region set (list items should be in the same order as rows of rsScores). 
Has same score columns as rsScores. 
Each column corresponds to a null distribution for that 
region set for a given sample variable of interest (e.g. PC or sample phenotype).}

\item{calcCols}{character.}

\item{method}{character. Has the method to use to fit the gamma 
distribution to the null distribution. See ?fitdistrplus::fitdist() for
available options and meaning. The default method "mme" is the 
"moment matching estimation"}

\item{realScoreInDist}{logical. Should the actual score (from 
test with no permutations) be included in the null distribution 
when fitting the gamma distribution}

\item{force}{logical.}
}
\value{
Returns a data.frame with p values, one column for each col in
rsScores
}
\description{
First fit a gamma distribution to each region set's null distribution/s
(nullDistList). Then use this gamma distribution to convert scores in
rsScores to p-values.
}
\examples{
fakeOriginalScores = data.frame(PC1=abs(rnorm(6)), PC2=abs(rnorm(6)))
fakePermScores = data.frame(PC1=abs(rnorm(6)), PC2=abs(rnorm(6)))
fakePermScores2 = data.frame(PC1=abs(rnorm(6)), PC2=abs(rnorm(6)))
fakePermScores3 = data.frame(PC1=abs(rnorm(6)), PC2=abs(rnorm(6)))
permRSScores = list(fakePermScores, fakePermScores2, fakePermScores3)
nullDistList = convertToFromNullDist(permRSScores)
getGammaPVal(rsScores=fakeOriginalScores, nullDistList=nullDistList, calcCols=c("PC1", "PC2")) 

}
