% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/COCOA.R
\name{getTopRegions}
\alias{getTopRegions}
\title{Get regions that are most associated with PCs of interest}
\usage{
getTopRegions(signal, signalCoord, regionSet, signalCol = c("PC1",
  "PC2"), cutoff = 0.8, returnQuantile = TRUE)
}
\arguments{
\item{signal}{matrix of loadings (the coefficients of 
the linear combination that defines each PC). One named column for each PC.
One row for each original dimension/variable (should be same order 
as original data/signalCoord). The x$rotation output of prcomp().}

\item{signalCoord}{a GRanges object or data frame with coordinates 
for the genomic signal/original data (eg DNA methylation/ATAC-seq) 
Coordinates should be in the 
same order as the original data and the loadings 
(each item/row in signalCoord
corresponds to a row in signal). If a data.frame, 
must have chr and start columns. If end is included, start 
and end should be the same. Start coordinate will be used for calculations.}

\item{regionSet}{A genomic ranges (GRanges) object with regions corresponding
to the same biological annotation.}

\item{signalCol}{A character vector with the sample variables
of interest (e.g. PCs or sample phenotypes). 



e.g. c("PC1", "PC2")}

\item{returnQuantile}{"logical" object. If FALSE, return region averages. If TRUE,
for each region, return the quantile of that region's average value
based on the distribution of individual genomic signal/feature values}
}
\value{
a GRanges object with region coordinates for regions with
scores/quantiles above "cutoff" for any PC in signalCol. The scores/quantiles
for signalCol are given as metadata in the GRanges.
}
\description{
Get a GRanges with top regions from the region set based on average
loadings for the regions or the quantile of the region's loading.
Returns average loading or quantile as GRanges metadata.
}
\examples{
data("brcaLoadings1")
data("brcaMCoord1")
data("esr1_chr1")
getTopRegions(signal=brcaLoadings1,
signalCoord=brcaMCoord1, regionSet=esr1_chr1, returnQuantile = TRUE)
}
