% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/COCOA.R
\name{getMetaRegionProfile}
\alias{getMetaRegionProfile}
\title{Create a "meta-region" loading profile}
\usage{
getMetaRegionProfile(signal, signalCoord, regionSet, signalCol = c("PC1",
  "PC2"), signalCoordType = "default", binNum = 25, verbose = TRUE,
  aggrMethod = "default", absVal = TRUE)
}
\arguments{
\item{signal}{matrix of loadings (the coefficients of 
the linear combination that defines each PC). One named column for each PC.
One row for each original dimension/variable (should be same order 
as original data/signalCoord). Given by prcomp(x)$rotation.}

\item{signalCoord}{a GRanges object or data frame with coordinates 
for the genomic signal/original data (eg DNA methylation/ATAC-seq) 
Coordinates should be in the 
same order as the original data and the loadings 
(each item/row in signalCoord
corresponds to a row in signal). If a data.frame, 
must have chr and start columns. If end is included, start 
and end should be the same. Start coordinate will be used for calculations.}

\item{regionSet}{A genomic ranges (GRanges) object with regions corresponding
to the same biological annotation.}

\item{signalCol}{A character vector with the sample variables
of interest (e.g. PCs or sample phenotypes). 



e.g. c("PC1", "PC2")}

\item{signalCoordType}{character. Can be "default", "singleBase", or 
"multiBase". This describes whether the coordinates for `signal` 
(`signalCoord`) are each a single base (e.g. as for DNA methylation)
or a region/multiple bases (e.g. as for ATAC-seq). Different scoring
options are available for each type of data. If "default" is given,
the type of coordinates will be detected automatically. For "default", if each
coordinate start value equals the coordinate end value 
(all(start(signalCoord) == end(signalCoord))), "singleBase"
will be used. Otherwise, "multiBase" will be used.}

\item{binNum}{Number of bins to split each region into when
making the aggregate loading profile. More bins will
give a higher resolution but perhaps more noisy profile.}

\item{verbose}{A "logical" object. Whether progress 
of the function should be shown, one
bar indicates the region set is completed. Useful when
using `lapply` to get the loading profiles of many region sets.}

\item{aggrMethod}{character. A character object with the aggregation method.
Similar to `scoringMetric`.
There are different aggregation methods available for 
signalCoordType="singleBase" vs  signalCoordType="multiBase".
For "singleBase", the available scoring methods are "regionMean" and
"simpleMean". The default method is "regionMean".
For "multiBase", the scoring methods are "proportionWeightedMean" and 
"simpleMean". The default is "proportionWeightedMean".
"regionMean" is a weighted
average of the signal, weighted by region (absolute value of signal 
if absVal=TRUE). First the signal is
averaged within each regionSet region, 
then all the regions are averaged. With
"regionMean" score, be cautious in interpretation for
region sets with low number of regions that overlap signalCoord. 
The "simpleMean"
method is just the unweighted average of all (absolute) signal values that
overlap the given region set. For multiBase data, this includes
signal regions that overlap a regionSet region at all (1 base
overlap or more) and the signal for each overlapping region is
given the same weight for the average regardless of how much it overlaps. 
"proportionWeightedMean" is a weighted average of all signalCoord 
regions that overlap with regionSet regions. For each signalCoord region
that overlaps with a regionSet region, we calculate what proportion
of the regionSet region is covered. Then this proportion is used to
weight the signal value when calculating the mean. 
The denominator of the mean
is the sum of all the proportion overlaps.}

\item{absVal}{logical. If TRUE, take the absolute value of values in
signal. Choose TRUE if you think there may be some 
genomic loci in a region set that will increase and others
will decrease (if there may be anticorrelation between
regions in a region set). Choose FALSE if you expect regions in a 
given region set to all change in the same direction (all be positively
correlated with each other).}
}
\value{
A data.frame with the binned loading profile,
one row per bin. columns: binID and one column for each PC
in signalCol. The function will return NULL if there
is no overlap between regionSet and signalCoord.
}
\description{
This loading profile can show enrichment 
of genomic signals with high loading values in region set but not in
surrounding genome, suggesting that variation is linked specifically
to that region set.
}
\details{
All regions in a given region set 
are combined into a single aggregate profile. Regions should be
expanded on each side to include a wider area of the genome around
the regions of interest (see example and vignettes). 
To make the profile, first we take 
the absolute value of the loadings. Then each region is
split into `binNum` bins. All loadings in each bin are 
averaged to get one value per bin. Finally, corresponding bins from
the different regions are averaged (eg all bin1's averaged with each other, 
all bin2's averaged with each other, etc.) to get a single "meta-region"
loading profile. Since DNA strand information is not considered, 
the profile is averaged symmetrically around the center.
A peak in the middle of this profile suggests
that variability is specific to the region set of interest and is 
not a product of the surrounding genome. A region set can still be
significant even if it does not have a peak. For example, some
histone modification region sets may be in large genomic blocks
and not show a peak, despite having variation across samples.
}
\examples{
data("brcaMCoord1")
data("brcaLoadings1")
data("esr1_chr1")
esr1_chr1_expanded <- resize(esr1_chr1, 14000, fix="center")
getMetaRegionProfile(signal=brcaLoadings1, 
                    signalCoord=brcaMCoord1, 
                    regionSet=esr1_chr1_expanded, 
                    signalCol=c("PC1", "PC2"), 
                    binNum=25)
}
